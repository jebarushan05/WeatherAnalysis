#include <stdio.h>
#include <string.h>

int date(int x){
	//jan
	if (x>=1 && x<=31){
		printf("%d/01/2017",x);
		}
	//feb
	if (x>=32 && x<=59){
		int b = x-31;
		printf("%d/02/2017",b);
		}
	//mar
	if (x>=60 && x<=90){
		int b = x-59;
		printf("%d/03/2017",b);
		}
	//april
	if (x>=91 && x<=120){
		int b = x-90;
		printf("%d/04/2017",b);
		}
	//may
	if (x>=121 && x<=151){
		int b = x-120;
		printf("%d/05/2017",b);
		}
	//june
	if (x>=152 && x<=181){
		int b = x-151;
		printf("%d/06/2017",b);
		}
	//july
	if (x>=182 && x<=212){
		int b = x-181;
		printf("%d/07/2017",b);
		}
	//august
	if (x>=213 && x<=243){
		int b = x-212;
		printf("%d/08/2017",b);
		}
	//september
	if (x>=244 && x<=273){
		int b = x-243;
		printf("%d/09/2017",b);
		}
	//october
	if (x>=274 && x<=304){
		int b = x-273;
		printf("%d/10/2017",b);
		}
	//november
	if (x>=305 && x<=334){
		int b = x-304;
		printf("%d/11/2017",b);
	}
	//december
	if (x>=335 && x<=365){
		int b = x-334;
		printf("%d/12/2017",b);
		}
		
		return 0;
}





int main(void)
{
	

/*made a array with a names of all the lakes called names*/
char names[6][40];
strcpy(names[0],"Lake Superior");
strcpy(names[1],"Lake michigan");
strcpy(names[2],"Lake Huron");
strcpy(names[3],"Lake Erie");
strcpy(names[4],"Lake Ontario");
strcpy(names[5],"Lake st. Clair");

/*For question 4 
 * put all the hottest temperaturew from each lake into the hot array
 * and put all the colest temperatures from each lakes into the cold array*/
double hot[6][2];
double cold[6][2];

double average =0;
double copy[365][2];//made a temporary array to use during bubble sort 
char tmp[50];//made a temporary string holder during bubble sort
double var,var1;//temporary number holder during bubble sort
int i,z,j;//variable use during for loops
int count=0;//used in question 7 and 8
double a1[365][6];//conatains all the temperatures with the temperatures of of 6 diffrent lakes in 6 diffrent columns
double averagearray[6];//contains the average temperatures of each lake in 6 diffrent columns.
double x,y,temp1,temp2,temp3,temp4,temp5,temp6;//all the variables take a number from each line from the data



//opening file and getting ready to read it
FILE *in;
in = fopen("cptext.txt","r");



//taking all the temperatures and putting them into an array called a1
for(i=0;i<365;++i){
fscanf(in,"%lf %lf %lf %lf %lf %lf %lf %lf",&x,&y,&temp1,&temp2,&temp3,&temp4,&temp5,&temp6);
a1[i][0]=temp1;
a1[i][1]=temp2;
a1[i][2]=temp3;
a1[i][3]=temp4;
a1[i][4]=temp5;
a1[i][5]=temp6;
}

fclose(in);//closing file because all data is extracted to answer the rest of the questions


/*question1---------------------------------------------------------------------------------------------------------------*/


printf("question 1\n");
printf("------------------------------------------------------------------------------------------------------------------------");


//this loops takes the average of each lake and puts it in an array
for(z=0;z<=5;++z){	
	average = 0;
for(i=0;i<=364;++i){
 average += (a1[i][z]);
	}
	average = (average/365);
	averagearray[z] = average;
}

//displays all the temperatures from the array
for(i=0;i<=5;++i){
	printf("\n average temperature of %s: %lf degrees",names[i],averagearray[i]);
	}
	
//takes average temperature of all lakes together and displays it
double averageofalllakes=0;
for(i=0;i<=5;++i){
	averageofalllakes+=averagearray[i];
	}
averageofalllakes = (averageofalllakes/6);
printf("\n \n the average of all lakes together is %lf degrees\n \n",averageofalllakes);


/*question 2---------------------------------------------------------------------------------------------------------------------------------------*/
printf("question 2 \n");
printf("------------------------------------------------------------------------------------------------------------------------");

//bubble sort is an algorithm to order things such as arrays
/*bubble sorts all the average along with the names in order from least to greatest by rearranging the array*/
while (averagearray[0] > averagearray[1] || averagearray[1] > averagearray[2] || averagearray[2] > averagearray[3] || averagearray[3] > averagearray[4] || averagearray[4] > averagearray[5]){
for(i=0;i<=4;++i){
	for(z=1+i;z<=5;++z){
		if( averagearray[i] > averagearray[z] ){
			double b = averagearray[z];
			strcpy(tmp,names[z]);
			averagearray[z]=averagearray[i];
			strcpy(names[z],names[i]);
			averagearray[i] =b;
			strcpy(names[i],tmp);
			}
		}
	}
}

//displays the highest and lowest temperature from the array
printf("\n the coldest temperature is: %lf degrees",averagearray[0]);
printf("\n the hottest tempetaure is: %lf degrees",averagearray[5]);

printf("\n");

//states which lakes have an average above and below the average temperature
for(i=0;i<=5;++i){
	if (averagearray[i]< averageofalllakes){
		printf(" \n %s has a temperature below the average",names[i]);
		}
	else{
		printf(" \n %s has a temperarure above the average",names[i]);
		}
	}
printf("\n------------------------------------------------------------------------------------------------------------------------");
/*question 3------------------------------------------------------------------------------------------------------------------------*/

printf("question 3");


/*for all 6 lakes bubble sort the days according to the temperatures
 *so the coldest and hottest temperatures of each lakes with the date can be displayed */

for(int x = 0;x<6;++x){
printf("\n");
for(i=0;i<365;++i){
	copy[i][0] = i+1;
	copy[i][1] = a1[i][x];
	}
for(i=1;i<365;++i){
	for(z=0;z<365;++z){
		if(copy[z][1]>copy[i][1]){
			var = copy[z][1];
			var1= copy[z][0];
			copy[z][1] = copy[i][1];
			copy[z][0] = copy[i][0];
			copy[i][1]=var;
			copy[i][0]=var1;
			}
		}
}

printf("\nthe coldest temperature of %s is %0.3lf on date:",names[x],copy[0][1]);
date(copy[0][0]);
cold[x][1] = copy[0][1];
cold[x][0] = copy[0][0]; 

printf(" \nthe warmest temperature of %s is  %0.3lf on date:",names[x],copy[364][1]);
date(copy[364][0]);
hot[x][1] = copy[364][1];
hot[x][0] = copy[364][0];	
}


printf("\n------------------------------------------------------------------------------------------------------------------------");
/*question 4*/
/*indicates the day,lake and temperature of the warmest and coldest water temperature out of all lakes with the date*/
printf("question 4\n");

//code for the hottest temperature and date
for(i=1;i<6;++i){
	for(z=0;z<6;++z){
		if(hot[z][1]>hot[i][1]){
			var = hot[z][1];
			var1= hot[z][0];
			hot[z][1] = hot[i][1];
			hot[z][0] = hot[i][0];
			hot[i][1]=var;
			hot[i][0]=var1;
			}
		}
}
printf("\nthe hottest temperature overall is %0.3lf from Lake Erie on date:",hot[5][1]);
date(hot[5][0]);


//code for the coldest temperature and date
for(i=1;i<6;++i){
	for(z=0;z<6;++z){
		if(cold[z][1]>cold[i][1]){
			var = cold[z][1];
			var1= cold[z][0];
			cold[z][1] = cold[i][1];
			cold[z][0] = cold[i][0];
			cold[i][1]=var;
			cold[i][0]=var1;
			}
		}
}
printf("\nthe coldest temperature overall is %0.3lf from Lake Erie on date:",cold[0][1]);
date(hot[0][0]);

printf("\n------------------------------------------------------------------------------------------------------------------------");
/*question 5*/
printf("This is question 5");
//average from day 172 to day 265 for all 6 lakes

/*resetting the original positions of the lakes in the array from begining*/
strcpy(names[0],"Lake Superior");
strcpy(names[1],"Lake michigan");
strcpy(names[2],"Lake Huron");
strcpy(names[3],"Lake Erie");
strcpy(names[4],"Lake Ontario");
strcpy(names[5],"Lake st. Clair");

printf("\n");


//average from day 171-265
for(z=0;z<6;++z){	
	average = 0;
for(i=171;i<265;++i){
		
 average += (a1[i][z]);
	}
	average = (average/94);
	
	averagearray[z] = average;
}

for(i=0;i<=5;++i){
	printf("\n average temperature of %s from 172 days to 265 is : %lf degrees",names[i],averagearray[i]);
	}
	
//ordering using bubble sort
for(i=1;i<6;++i){
	for(z=0;z<6;++z){
		if(averagearray[z]<averagearray[i]){
			var = averagearray[z];
			strcpy(tmp,names[z]);
			averagearray[z] = averagearray[i];
			strcpy(names[z],names[i]);
			averagearray[i]=var;
			strcpy(names[i],tmp);
			}
		}
}

printf(" \n\n the temperatures in order from warmest to coldest through days 172 to 265 are:");
for(i=0;i<6;++i){
	printf("\n %s: %0.3lf",names[i],averagearray[i]);
	
	}
	
printf("\n------------------------------------------------------------------------------------------------------------------------");	
/*question 6*/
printf("question 6");
//calculates the winter lake average for all 6 lakes, from warmest to coldest

strcpy(names[0],"Lake Superior");
strcpy(names[1],"Lake michigan");
strcpy(names[2],"Lake Huron");
strcpy(names[3],"Lake Erie");
strcpy(names[4],"Lake Ontario");
strcpy(names[5],"Lake st. Clair");

for(z=0;z<6;++z){	
	average = 0;
for(i=354;i<=364;++i){
 average += (a1[i][z]);
	}
for(i=0;i<=78;++i){
 average += (a1[i][z]);
}
	average = (average/89);
	averagearray[z] = average;
}

//bubble sort method
for(i=1;i<6;++i){
	for(z=0;z<6;++z){
		if(averagearray[z]<averagearray[i]){
			var = averagearray[z];
			strcpy(tmp,names[z]);
			averagearray[z] = averagearray[i];
			strcpy(names[z],names[i]);
			averagearray[i]=var;
			strcpy(names[i],tmp);
			}
		}
	}

printf(" \n\n the winter averages for all 6 lakes in order from 1-79 and 355-365");
for(i=0;i<6;++i){
	printf("\n %s: %0.3lf",names[i],averagearray[i]);
}

printf("\n------------------------------------------------------------------------------------------------------------------------");
/*question 7----------------------------------------------------------------------------------------------------------------------*/
printf("question 7\n");
//calculates the amount of days that one can swim in each lake
for(j=0;j<6;++j){
	count =0;
 for(i=0;i<365;++i){
	 if(a1[i][j]>20){
		 count++;
		 }	
	 }	 
	 printf("\n You can swim in %s for: %d days",names[j],count);
 }
 
printf("\n ");

printf("----------------------------------------------------------------------------------------------------------------------");
/*question 8------------------------------------------------------------------------------------------------------------------------*/
printf("  question 8");
//calculates the amount of days that each lake is frozen
for(j=0;j<6;++j){
	count =0;
 for(i=0;i<365;++i){
	 if(a1[i][j]<0){
		 count++;
		 }	
	 }	 
	 printf("\n The number of days that %s is frozen for: %d days",names[j],count);
 }
	return 0;


}






